version: 2
jobs:
  build:
       docker:
          - image: circleci/node:8.11

       steps:
          - checkout
          - setup_remote_docker
          # Download and cache dependencies
          - restore_cache:
              keys:
                - v1-dependencies-{{ checksum "requirements.txt" }}
                # fallback to using the latest cache if no exact match is found
                - v1-dependencies-

          - run:
              name: install dependencies
              command: |
                sudo apt-get update
                sudo apt install -y software-properties-common wget
                #sudo add-apt-repository ppa:deadsnakes/ppa
                #sudo apt-get update
                wget https://www.python.org/ftp/python/3.6.9/Python-3.6.9.tar.xz
                tar xvf Python-3.6.9.tar.xz
                cd Python-3.6.9
                sudo ./configure
                sudo make altinstall
                
                #sudo apt install -y python3 python3-pip 
                sudo python3 --version
                sudo python3.6 --version
                sudo pip3 install -U setuptools
                sudo pip3 install -r requirements.txt
                
                #sudo /usr/bin/python3 -m pip install -U setuptools
                #sudo /usr/bin/python3 -m pip install -r requirements.txt
          - save_cache:
              paths:
                - ./venv
              key: v1-dependencies-{{ checksum "requirements.txt" }}
          
#         steps:
#           - checkout
#           - run:
#               name: Install Docker Compose
#               command: |
#                 curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
#                 chmod +x ~/docker-compose
#                 sudo mv ~/docker-compose /usr/local/bin/docker-compose

          - run:
              name: Install python
              command: |
                ls
                apt-get update
                sudo add-apt-repository ppa:deadsnakes/ppa
                sudo apt-get update
                sudo apt install -y python3.6 python3-pip
                ls
#                sudo pip3 install -r requirements.txt

          - run:
              name: Creating virtualenv
              command: |
                which python3.6
                echo about creating virtualenv
                virtualenv -p /opt/circleci/.pyenv/shims/python3.6 mock
                #sudo python3.6 -m venv mock
                echo virtualenv done
                . mock/bin/activate
                echo print python version
                sudo python --version
                sudo pip3 freeze
                sudo python3.6 --version
                echo import paramiko
                sudo python3.6 -c "import paramiko"

          - run:
              name: check version
              command: |
                sudo python3 --version
                sudo pip3 freeze
                sudo python3.6 --version
                echo import paramiko
                sudo python3.6 -c "import paramiko"

   
   
          - run:
              name: check ip
              command: |
                ip a

#          - run:
#              name: build docker
#              command: |
#                 pwd
#                 ls
#                 docker build -t mockssh . 

#          - run:
#              name: spin up docker
#              command: |
#                 docker run -d --name mockssh mockssh
#
          - run:
              name: start container
              command: |
                set -x
                docker-compose up -d
                
          - run:
              name: verify docker
              command: |
                 whoami
                 uname -a
                 docker ps -a
                 ip a
                 IP=$(docker inspect mockssh | grep -w IPAddress | awk '{print $2}' | tr -d '"' | tr -d ',' | tail -1)
                 echo $IP
                 ping -c1 $IP

                 #echo $DOCKER_HOST

                 #IP2=$(echo $DOCKER_HOST | grep -oE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b")
                 #echo ping ip2
                 #sudo ping c1 $IP2
                 #sudo ip a
                 #sudo ping -c1 $IP
                 #echo nc
                 #sudo nc -z $IP 22
                 #echo $?
                 docker exec mockssh ip a
                 docker exec mockssh apt update
                 docker exec mockssh apt install -y net-tools
                 docker exec mockssh netstat -an | grep -w 2222
                 nc -z $IP 2222
                 #ssh -p 2222 testadmin@$IP


          - run:
              name: enter IP
              command: |
                 cd test
                 ls *.json.test.orig
                 echo
                 echo
                 echo 'hosts file'
                 cat ../test/hosts2.json.test.orig
                 echo
                 IP=$(docker inspect mockssh | grep -w IPAddress | awk '{print $2}' | tr -d '"' | tr -d ',' | tail -1)
                 echo IP FOUND IS: $IP
                 for i in *.json.test.orig; do
                   sed -i s"/127.0.0.1/$IP/g" $i
                 done

#          - run:
#              name: install requirements
#              command: |
#                sudo apt install -y python3-pip
#                sudo pip3 install -r requirements.txt

          - run:
              name: run test
              command: |
                cd alive
                sudo python3.6 createStatus.py --hostFile ../test/hosts2.json.test.orig --vendorFile ../test/vendorNodes.json.test --statusFile ../test/status.json.test
                cp ../test/status.json.test ../test/status.json.test.orig
                echo
                echo
                cat ../test/status.json.test
                echo
                echo
                echo 'hosts file'
                cat ../test/hosts2.json.test.orig
                sudo python3.6 test.py

